name: Build and deploy docs

on:
    workflow_call:
        inputs:
            project-name:
                type: string
                required: true
                description: "Cloudflare Pages project name"
            docs-path:
                type: string
                required: false
                default: "docs"
                description: "Path to the docs directory"

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        name: Build docs
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: ${{ inputs.docs-path }}

        outputs:
            secrets_available: ${{ steps.check-secrets.outputs.secrets_available }}

        steps:
            - name: Checkout
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
              with:
                  fetch-depth: 0

            - name: Setup Node
              uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
              with:
                  node-version: 22.20.0
                  cache: npm
                  cache-dependency-path: ${{ inputs.docs-path }}/package-lock.json

            - name: Install dependencies
              run: npm ci

            - name: Build with VitePress
              run: npm run build

            - name: Upload build artifacts
              uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
              with:
                  name: docs-dist
                  path: ${{ inputs.docs-path }}/.vitepress/dist

            - name: Check if secrets are available
              id: check-secrets
              run: |
                  echo "secrets_available=${{ secrets.CLOUDFLARE_API_TOKEN && secrets.CLOUDFLARE_ACCOUNT_ID && 'true' || '' }}" >> "$GITHUB_OUTPUT"

    deploy:
        name: Deploy docs
        needs: build
        if: ${{ ( github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'üöÄ Request Deploy') ) && needs.build.outputs.secrets_available }}
        runs-on: ubuntu-latest

        permissions:
            contents: read
            deployments: write
            pull-requests: write

        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
              with:
                  name: docs-dist
                  path: dist

            - name: Deploy to Cloudflare Pages
              uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3
              id: deploy
              with:
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  gitHubToken: ${{ secrets.GITHUB_TOKEN }}
                  command: pages deploy dist --project-name=${{ inputs.project-name }} --branch=${{ github.head_ref || github.ref_name }}

            - name: Comment deployment info
              uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # v3
              if: github.event_name == 'pull_request'
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  comment-tag: deployment-info
                  mode: recreate
                  message: |
                      **üåê Preview Deployment:** ${{ steps.deploy.outputs.pages-deployment-alias-url }}

            - name: Remove build request label
              uses: IamPekka058/removeLabels@82c8d070189f04448d6ffe291a0e398c2a749a09 # v2
              if: github.event_name == 'pull_request'
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  labels: |
                      - üöÄ Request Deploy
